syntax = "proto3";

package chatservice;

option java_multiple_files = true;
option java_package = "com.hab.grpc.chatservice";
option java_outer_classname = "ChatServiceGRPC";

message NewPeerRequest{
    string user_id = 1;
}

message NewPeerResponse{
    int32 response_code = 1;
}

message SearchingPeerRequest {
    string user_id = 1;
    string status = 2;
    double latitude = 3;
    double longitude = 4;
    int32 searching_in_radius_in_meters = 5;
}

message SearchingPeerResponse {
    int32 response_code = 1;
    string user_id = 2;
    int32 radius_distance_in_meters = 3;
    string status = 4;
}

message NewMessageRequest {
    string user_id = 1;
    string message = 2;
    string to_user_id = 3;
}

message NewMessageResponse {
    int32 response_code = 1;
    string message = 2;
}

message NewCollectiveMessageRequest {
    string user_id = 1;
    string message = 2;
}

message NewCollectiveMessageResponse {
    int32 response_code = 1;
    string message = 2;
}

message TypingMessageRequest {
    string user_id = 1;
    string to_user_id = 2;
}

message TypingMessageResponse {
    int32 response_code = 1;
}

message ChatClosedRequest {
    string user_id = 1;
    bool is_closed = 2;
    string to_user_id = 3;
}

message ChatClosedResponse {}

message CollectiveChatClosedRequest {
    string user_id = 1;
    bool is_closed = 2;
}

message CollectiveChatClosedResponse {}

message AdminStatusRequest {
    string user_id = 1;
    bool is_admin_on = 2;
}

message AdminStatusResponse{
    int32 response_code = 1;
}

message PeerClosedRequest{
    string user_id = 1;
}

message PeerClosedResponse{
    int32 response_code = 1;
}

message BlockUserInCollectiveChatRequest{
    string user_id = 1;
    string blocking_time = 2; // 1h or 3h or 5h or always
}

message BlockUserInCollectiveChatResponse {
    int32 response_code = 1;
}

service Chat {
    rpc NewPeer (NewPeerRequest) returns (NewPeerResponse) {}
    rpc SearchingPeer(SearchingPeerRequest) returns (stream SearchingPeerResponse) {}
    rpc NewMessage (NewMessageRequest) returns (stream NewMessageResponse) {}
    rpc NewCollectiveMessage(NewCollectiveMessageRequest) returns (stream NewCollectiveMessageResponse) {}
    rpc TypingMessage(TypingMessageRequest) returns (stream TypingMessageResponse) {}
    rpc ChatClosed(ChatClosedRequest) returns(stream ChatClosedResponse){}
    rpc CollectiveChatClosed(CollectiveChatClosedRequest) returns(stream CollectiveChatClosedResponse){}
    rpc PeerClosed (PeerClosedRequest) returns (PeerClosedResponse) {}
    rpc AdminStatus(AdminStatusRequest)returns (AdminStatusResponse){}
    rpc BlockUserInCollectiveChat(BlockUserInCollectiveChatRequest) returns (stream BlockUserInCollectiveChatResponse) {}
}
